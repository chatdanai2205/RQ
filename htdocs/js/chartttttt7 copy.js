const fullDepartmentNames = department_1.map(item => item.department); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°
const shortDepartmentNames = department_1.map(item => 
    item.department.length > 12 ? item.department.substring(0, 12) + '...' : item.department
); // ‡πÄ‡∏Å‡πá‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡πà‡∏≠

const ctx7_1 = document.getElementById('pie_chart7_1').getContext('2d');

const cfg7_1 = {
  type: 'bar',
  data: {
    labels: shortDepartmentNames, // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡∏¢‡πà‡∏≠‡∏ö‡∏ô‡∏Å‡∏£‡∏≤‡∏ü
    datasets: [{
        label: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏£‡∏ß‡∏°',
        data: department_1.map(item => item.avg_total_score),
        backgroundColor: '#8dc4ff',
        datalabels: {
          color: function(context) {
            const value = context.dataset.data[context.dataIndex];
            const category = context.dataset.label;
            return getColorByCategory(value, category);
          },
          font: {
            family: "'Prompt', sans-serif",
            size: 14,
          },
          formatter: function(value) {
            return Number(value).toFixed(1);
          },
          anchor: 'end',
          align: 'right',
        }
      }
    ]
  },
  options: {
    responsive: true,
    maintainAspectRatio: false,
    indexAxis: 'y',
    plugins: {
      title: {
        display: true,
        color: '#00000',
        font: {
          family: "'Prompt', sans-serif",
          size: 16
        }
      },
      legend: {
        labels: {
          color: '#00000',
          font: {
            family: "'Prompt', sans-serif"
          },
          boxWidth: 20,
          boxHeight: 20,
        }
      },
      tooltip: {
        enabled: true,
        callbacks: {
          title: function(tooltipItems) {
            let index = tooltipItems[0].dataIndex;
            return fullDepartmentNames[index]; // ‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡πá‡∏°‡πÉ‡∏ô Tooltip
          },
          label: function(context) {
            return `‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: ${context.raw}`;
          }
        }
      },
      datalabels: {
        anchor: 'end',
        align: 'right',
        font: {
          family: "'Prompt', sans-serif",
          size: 14,
        }
      }
    },
    scales: {
        x: {
            title: {
                display: true,  // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡∏ô X
                text: '‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏û‡∏•‡∏±‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏à‡∏¥‡∏ï', // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡∏ô X
                color: '#000000', // ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                font: {
                    family: "'Prompt', sans-serif",
                    size: 14, // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                    weight: 'bold' // ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤
                }
            },
        ticks: {
            color: '#00000', // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏ô‡πÅ‡∏Å‡∏ô X
            font: {
                family: "'Prompt', sans-serif"
            }
        },grid: {
            display: false
            },// ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏™‡πâ‡∏ô Grid Line ‡πÅ‡∏Å‡∏ô X
        },
        y: {
            title: {
                display: true,  // ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡∏ô X
                text: '‡∏†‡∏≤‡∏Ñ‡∏ß‡∏¥‡∏ä‡∏≤', // üîπ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡∏ô X
                color: '#000000', // ‡∏™‡∏µ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
                font: {
                    family: "'Prompt', sans-serif",
                    size: 14, // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
                    weight: 'bold' // ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏≤
                }
            },
        ticks: {
            color: '#00000' // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏ô‡πÅ‡∏Å‡∏ô Y
        },grid: {
            display: false
        },// ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡πÄ‡∏™‡πâ‡∏ô Grid Line ‡πÅ‡∏Å‡∏ô X
          suggestedMax: 80 // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ max ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡πÅ‡∏Å‡∏ô Y
        }
      }
  },
  plugins: [ChartDataLabels] // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Plugin datalabels
};

// ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü
const pie_chart7_1 = new Chart(ctx7_1, cfg7_1);
